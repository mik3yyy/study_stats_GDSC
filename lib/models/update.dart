import 'package:hive/hive.dart';

part 'update.g.dart'; // File generated by build_runner

@HiveType(typeId: 3) // Ensure a unique typeId if you have other Hive models
class Update extends HiveObject {
  @HiveField(0)
  final double gpa;

  @HiveField(1)
  final double cgpa;

  @HiveField(2)
  final String gradingSystem;

  @HiveField(3)
  final List<dynamic>
      scores; // Consider specifying a more precise type if possible

  @HiveField(4)
  final List courseData;

  @HiveField(5)
  final String level;

  @HiveField(6)
  final String semester;

  @HiveField(7)
  final bool uploaded;

  @HiveField(8) // Assuming this is the next available index
  final String timestamp;
  @HiveField(9) // Assuming this is the next available index
  final String past_semester; // Stored as a string for simplicity

  Update({
    required this.gpa,
    required this.cgpa,
    required this.gradingSystem,
    required this.scores,
    required this.courseData,
    required this.level,
    required this.semester,
    required this.past_semester,
    this.uploaded = false, // Default value
    String? timestamp, // Made optional
  }) : timestamp = timestamp ?? DateTime.now().toIso8601String();
  // Convert an Update object into a Map object
  Map<String, dynamic> toJson() => {
        'gpa': gpa,
        'cgpa': cgpa,
        'gradingSystem': gradingSystem,
        'scores': scores,
        'courseData': courseData,
        'level': level,
        'semester': semester,
        'uploaded': true,
        'timestamp': timestamp,
        'past_semester': past_semester,
      };

  // Create an Update object from a map
  factory Update.fromJson(Map<String, dynamic> json) => Update(
        gpa: json['gpa'].toDouble(),
        cgpa: json['cgpa'].toDouble(),
        gradingSystem: json['gradingSystem'],
        scores:
            json['scores'] != null ? List<dynamic>.from(json['scores']) : [],
        courseData: json['courseData'] != null
            ? List<dynamic>.from(json['courseData'])
            : [],
        level: json['level'],
        semester: json['semester'],
        uploaded: json['uploaded'] ?? false,
        timestamp: json['timestamp'],
        past_semester: json['past_semester'],
      );
  @override
  String toString() {
    return 'Update(gpa: $gpa, cgpa: $cgpa, gradingSystem: $gradingSystem, scores: $scores, courseData: $courseData, level: $level, semester: $semester, uploaded: $uploaded, timestamp: $timestamp,   past_semester: $past_semester:)';
  }
}
